
###### standard curation of the input ######
# construct a conversion table between flybase id and gene name 
# construct the meme matrix for different CrebA motifs 

# build the flybase dictionary 
rule build_flybase_dict: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf"
    output: 
        "../input/flybase_gene_conversion/conversion_tab.csv"
    shell: 
        "python3 build_flybase_dictionary.py"
    
# build the meme matrix 
rule convert_chen_to_meme: 
    input: 
        "../input/previous_CrebA_motifs/AllCrebAMotifs_probabilitymatricies.txt"
    output: 
        "../input/previous_CrebA_motifs/CrebAMotifs_meme.meme"
    shell: 
        "python3 chen_to_meme.py"

###### gather the promoter regions and +/- 1kb regions surrounding the TSS of genes #######

# get the promoter regions of the genes 
rule get_promoter_regions: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output:
        "../output/tss_table/promoter_regions.bed"
    shell: 
        "python3 get_promoter.py"

# get 1.5kb +/- surrounding TSS of the genes 
rule get_regulatory_regions: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output:
        "../output/tss_table/regulatory_regions_table.txt", 
        "../output/tss_table/regulatory_regions.bed"
    shell: 
        "python3 get_regulatory_regions.py"

# get 400bp +/- surrounding TSS of the gene 
rule get_regulatory_regions_400bp: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output:
        "../output/tss_table/regulatory_regions_table_400bp.txt", 
        "../output/tss_table/regulatory_regions_400bp.bed"
    shell: 
        """
        python3 get_regulatory_regions_400bp.py
        """

###### run FIMO on 1.5kb +/- around SPCGs TSS ######
# generate bed files for the SPCGs' regulatory regions 
rule process_regulatory_regions_SPCGs:
    input: 
        "../output/tss_table/regulatory_regions.bed", 
        "../input/SPCG_files/SPCG List.xlsx"
    output: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_pos.bed"
    shell: 
        """
        python3 process_regulatory_regions_SPCGs.py
        """

# get the fasta of SPCGs' regulatory regions 
rule get_regulatory_regions_SPCGs_fasta: 
    input: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_pos.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_seq.fasta"
    shell: 
        """
        bedtools getfasta -fi {input[1]} -bed {input[0]} -nameOnly > {output}
        """

# perform FIMO on SPCGs' regulatory regions 
rule FIMO_regulatory_regions_flyFactorSurvey_SPCGs: 
    input: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_seq.fasta"
    output: 
        
    shell: 
        """
        bash FIMO_regulatory_regions_flyFactorSurvey_SPCGs.sh
        """

rule summarize_SPCGs_FIMO_regions_results: 
    input: 
        "../input/SPCG_files/SPCG List.xlsx"
    output: 
    shell: 
        """
        python3 analyze_FIMO_SPCGs.py
        """


##### trim peak regions to be 500 +/- around the peak and get the intersecting peaks ######
# trim the peak regions to be 500 +/- around the peak 
rule trim_range_peaks: 
    input: 
        "../input/GEO_processed/GSM4213092_oregon_CrebA_peaks.narrowPeak",
        "../input/intersect_peaks/Set1.NEW_OR_fkh_sage_intersection_fromDA.bed", 
        "../input/GEO_processed/GSM4213094_fkh_CrebA_peaks.narrowPeak",
        "../input/GEO_processed/GSM4213096_sage_CrebA_peaks.narrowPeak"
    output: 
        "../output/range_peak_regions/oregon_fkh_sage_intersect.narrowPeak",
        "../output/range_peak_regions/CrebA_oregon.narrowPeak", 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak",
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    shell: 
        """
        mkdir -p ../output/range_peak_regions/
        python trim_peaks_range.py
        """

# get the all unique peaks between fkh and sage ChIP-seq 
# get peaks that are more than 250 bps apart 
rule find_fkh_sage_peaks: 
    input: 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak", 
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    output: 
        "../output/range_peak_regions/sage_contrast_fkh.narrowPeak",
        "../output/range_peak_regions/fkh_sage_unique.narrowPeak"
    shell: 
        """
        bedtools intersect -a {input[1]} -b {input[0]} -f 0.5 -v > {output[0]}
        cat {input[0]} {output[0]} > {output[1]}
        """

rule find_fkh_sage_intersect_peaks: 
    input: 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak", 
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    output: 
        "../output/range_peak_regions/fkh_sage_intersect.narrowPeak"
    shell: 
        """
        bedtools intersect -a {input[1]} -b {input[0]} -f 0.25 -u -wa > {output}  
        """

##### match the peaks to a gene ######
# match the peak to a gene 
rule match_peak_gene: 
    input: 
        "../output/range_peak_regions/fkh_sage_intersect.narrowPeak", 
        "../output/range_peak_regions/fkh_sage_unique.narrowPeak"
    output: 
    shell: 
        """
        python3 match_nearest_region_to_genes_range.py
        """

rule find_bound_SPCGs: 
    input: 
        '../input/SPCG_files/SPCG List.xlsx', 
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv", 
        "../output/match_nearest_gene/fkh_sage_unique_genes.csv"
    output: 
        "../output/find_bound_SPCGs/spcg_match.csv"
    shell: 
        """
        python3 find_bound_SPCGs.py
        """

rule find_bound_DE_genes: 
    input: 
        "../output/match_nearest_gene/fkh_sage_unique_genes.csv",
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv"
    output: 
    shell: 
        """
        python3 find_bound_DE_genes.py
        Rscript enrichment_categorized_DE_genes.R
        """

rule plot_intersect_bound_genes: 
    input: 
        "../output/find_bound_DE_genes/down_DE.csv",
        "../output/find_bound_DE_genes/up_DE.csv",
        "../output/find_bound_SPCGs/spcg_match.csv",
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv"
    output: 
        "../output/bound_spcg_DE_venn/bound_SPCGs_down_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_scdown_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_up_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_scup_venn.png", 
        "../output/bound_spcg_DE_venn/bound_down_up_venn.png",
    shell: 
        """
        python3 plot_intersect_Bound_genes.py
        """

rule process_regulatory_regions_bound_genes: 
    input: 
        "../output/tss_table/regulatory_regions.bed", 
        "../output/find_bound_DE_genes/down_DE.csv", 
        "../output/find_bound_DE_genes/up_DE.csv"
    output: 
        "../output/bound_genes_regulatory_regions/down_genes_reg_regions.bed",
        "../output/bound_genes_regulatory_regions/up_genes_reg_regions.bed"
    shell: 
        """
        python3 process_regulatory_regions_bound_genes.py
        """

rule fimo_activated_bound_genes: 
    input:
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions/down_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions/down_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions/down_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_down.sh
        """

rule fimo_repressed_bound_genes: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions/up_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions/up_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions/up_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_up.sh
        """

rule fimo_static_bound_genes: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions/static_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions/static_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions/static_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_static.sh
        """

rule analyze_bound_genes_FIMO: 
    input: 
        "../output/find_bound_DE_genes/down_DE.csv",
        "../output/find_bound_DE_genes/up_DE.csv", 
        "../output/bound_genes_regulatory_regions/static_DE.csv"
    output: 
        '../output/bound_genes_regulatory_regions/down_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions/down_flyfactorsurvey_hits_prop.csv',
        '../output/bound_genes_regulatory_regions/up_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions/up_flyfactorsurvey_hits_prop.csv',
        '../output/bound_genes_regulatory_regions/static_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions/static_flyfactorsurvey_hits_prop.csv'
    shell: 
        """
        python analyze_FIMO_down_genes.py 
        python analyze_FIMO_up_genes.py 
        python analyze_FIMO_static_genes.py 
        """

rule plot_distance_from_tss: 
    input: 
        '../output/match_nearest_gene/fkh_sage_intersect_genes.csv',
        "../output/tss_table/regulatory_regions_table.txt",
        "../../analysis/results/v19/DE_genes_early_crebA_wt/Salivary Gland/mut_DE_genes.csv",
        "../output/find_bound_DE_genes/down_DE.csv",
        "../output/find_bound_DE_genes/up_DE.csv"
    output: 
        directory('../output/plot_location_crebA_binding')
    shell: 
        """
        Rscript plot_distance_crebA.R
        """

rule process_regulatory_regions_bound_genes_400bp: 
    input: 
        "../output/tss_table/regulatory_regions.bed", 
        "../output/find_bound_DE_genes/down_DE.csv", 
        "../output/find_bound_DE_genes/up_DE.csv"
    output: 
        "../output/bound_genes_regulatory_regions_400bp/down_genes_reg_regions.bed",
        "../output/bound_genes_regulatory_regions_400bp/up_genes_reg_regions.bed"
    shell: 
        """
        python3 process_regulatory_regions_bound_genes_400bp.py
        """

rule fimo_activated_bound_genes_400: 
    input:
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp/down_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions_400bp/down_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions_400bp/down_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_down_400bp.sh
        """

rule fimo_repressed_bound_genes_400: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp/up_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions_400bp/up_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions_400bp/up_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_up_400bp.sh
        """

rule fimo_static_bound_genes_400: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp/static_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions_400bp/static_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions_400bp/static_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_bound_genes_static_400bp.sh
        """

rule analyze_bound_genes_FIMO_400bp: 
    input: 
        "../output/find_bound_DE_genes/down_DE.csv",
        "../output/find_bound_DE_genes/up_DE.csv", 
        "../output/bound_genes_regulatory_regions/static_DE.csv"
    output: 
        '../output/bound_genes_regulatory_regions_400bp/down_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions_400bp/down_flyfactorsurvey_hits_prop.csv',
        '../output/bound_genes_regulatory_regions_400bp/up_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions_400bp/up_flyfactorsurvey_hits_prop.csv',
        '../output/bound_genes_regulatory_regions_400bp/static_flyfactorsurvey_hits.csv',
        '../output/bound_genes_regulatory_regions_400bp/static_flyfactorsurvey_hits_prop.csv'
    shell: 
        """
        python analyze_FIMO_down_genes_400bp.py 
        python analyze_FIMO_up_genes_400bp.py 
        python analyze_FIMO_static_genes_400bp.py 
        """
# write the rule to generate the null sequences 
rule get_null_400bp_sequences: 
    input: 
    output:
    shell:
        """
        python process_regulatory_regions_bound_genes_400bp_null.py 
        """

# fimo the unbound genes 
rule fimo_unbound_genes_400: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp_null/no_bound_genes_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions_400bp_null/no_bound_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions_400bp_null/no_bound_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_no_bound_genes_400bp.sh
        """

# run fimo on random sequences 
rule fimo_random_genes_400: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp_null/random_reg_regions.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/bound_genes_regulatory_regions_400bp_null/random_genes/bound_regulatory_regions_seq.fasta",
        directory("../output/bound_genes_regulatory_regions_400bp_null/random_genes/fly_factor_survey/")
    shell: 
        """
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}
        bash FIMO_regulatory_regions_flyFactorSurvey_random_genes_400bp.sh
        """


# TODO make a rule for this 
# python process_regulatory_regions_bound_genes_400bp_bg.py 

# run fimo with Drosophila sequence background 
rule fimo_down_genes_400bg: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp_bg/down_genes_reg_regions.bed",
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        directory("../output/bound_genes_regulatory_regions_400bp_bg/down_genes/"),
        directory("../output/bound_genes_regulatory_regions_400bp_bg/down_genes/fly_factor_survey/")
        
    shell: 
        """
        mkdir -p {output[0]}
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}/bound_regulatory_regions_seq.fasta
        mkdir -p {output[1]}

        fasta-get-markov {output[0]}/bound_regulatory_regions_seq.fasta > {output[0]}/background_model.txt
        cat ../input/motif_databases.12.23/FLY/fly_factor_survey.meme | grep MOTIF > {output[1]}/motif_database.txt 
        while read p; do 
            motif_id=$(echo ${{p}} | cut -d ' ' -f2)
            motif_name=$(echo ${{p}} | cut -d ' ' -f3)
            fimo --o {output[1]}/${{motif_id}}---${{motif_name}} --motif ${{motif_id}} --bgfile {output[0]}/background_model.txt ../input/motif_databases.12.23/FLY/fly_factor_survey.meme {output[0]}/bound_regulatory_regions_seq.fasta
        done < {output[1]}/motif_database.txt
        """

# look at the up FIMO 
rule fimo_up_genes_400bg: 
    input: 
        "../input/motif_databases.12.23/FLY/fly_factor_survey.meme", 
        "../output/bound_genes_regulatory_regions_400bp_bg/up_genes_reg_regions.bed",
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        directory("../output/bound_genes_regulatory_regions_400bp_bg/up_genes/"),
        directory("../output/bound_genes_regulatory_regions_400bp_bg/up_genes/fly_factor_survey/")
        
    shell: 
        """
        mkdir -p {output[0]}
        bedtools getfasta -fi {input[2]} -bed {input[1]} -nameOnly > {output[0]}/bound_regulatory_regions_seq.fasta
        mkdir -p {output[1]}

        fasta-get-markov {output[0]}/bound_regulatory_regions_seq.fasta > {output[0]}/background_model.txt
        cat ../input/motif_databases.12.23/FLY/fly_factor_survey.meme | grep MOTIF > {output[1]}/motif_database.txt 
        while read p; do 
            motif_id=$(echo ${{p}} | cut -d ' ' -f2)
            motif_name=$(echo ${{p}} | cut -d ' ' -f3)
            fimo --o {output[1]}/${{motif_id}}---${{motif_name}} --motif ${{motif_id}} --bgfile {output[0]}/background_model.txt ../input/motif_databases.12.23/FLY/fly_factor_survey.meme {output[0]}/bound_regulatory_regions_seq.fasta
        done < {output[1]}/motif_database.txt
        """

rule analyze_fimo_genes_400bg: 
    input: 
    output: 
    shell: 
        """
        python analyze_FIMO_results.py --bed ../output/bound_genes_regulatory_regions_400bp_bg/down_genes_reg_regions.bed \
                                       --fimo ../output/bound_genes_regulatory_regions_400bp_bg/down_genes/fly_factor_survey/ \
                                       --out ../output/bound_genes_regulatory_regions_400bp_bg/down_genes/ \
                                       --name down_genes

        python analyze_FIMO_results.py --bed ../output/bound_genes_regulatory_regions_400bp_bg/up_genes_reg_regions.bed \
                                       --fimo ../output/bound_genes_regulatory_regions_400bp_bg/up_genes/fly_factor_survey/ \
                                       --out ../output/bound_genes_regulatory_regions_400bp_bg/up_genes/ \
                                       --name up_genes --color '#fc8d62'
        """

# rule to sg_select_fimo_genes_400bg

rule sg_select_fimo_genes_400bg:
    input: 
    output:
    shell:
        """
        python sg_select_fimo_genes_400bg.py --fimo_prop_path ../output/bound_genes_regulatory_regions_400bp_bg/down_genes/down_genes_flyfactorsurvey_hits_prop.csv \
                                             --output_path ../output/bound_genes_regulatory_regions_400bp_bg/down_genes/ \
                                             --file_name down \
                                             --percent_cutoff 0.5
        
        python sg_select_fimo_genes_400bg.py --fimo_prop_path ../output/bound_genes_regulatory_regions_400bp_bg/up_genes/up_genes_flyfactorsurvey_hits_prop.csv \
                                             --output_path ../output/bound_genes_regulatory_regions_400bp_bg/up_genes/ \
                                             --file_name up \
                                             --bar_color '#fc8d62' \
                                             --percent_cutoff 0.5
                                                                               
        """

