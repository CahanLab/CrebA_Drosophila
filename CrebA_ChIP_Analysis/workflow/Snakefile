
###### standard curation of the input ######
# construct a conversion table between flybase id and gene name 
# construct the meme matrix for different CrebA motifs 

# build the flybase dictionary 
rule build_flybase_dict: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf"
    output: 
        "../input/flybase_gene_conversion/conversion_tab.csv"
    shell: 
        "python3 build_flybase_dictionary.py"
    
# build the meme matrix 
rule convert_chen_to_meme: 
    input: 
        "../input/previous_CrebA_motifs/AllCrebAMotifs_probabilitymatricies.txt"
    output: 
        "../input/previous_CrebA_motifs/CrebAMotifs_meme.meme"
    shell: 
        "python3 chen_to_meme.py"

###### gather the promoter regions and +/- 1kb regions surrounding the TSS of genes #######

# get the promoter regions of the genes 
rule get_promoter_regions: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output:
        "../output/tss_table/promoter_regions.bed"
    shell: 
        "python3 get_promoter.py"

# get 1kb +/- surrounding TSS of the genes 
rule get_regulatory_regions: 
    input: 
        "../input/reference_genome/dmel-all-r6.33.gtf", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output:
        "../output/tss_table/regulatory_regions_table.txt", 
        "../output/tss_table/regulatory_regions.bed"
    shell: 
        "python3 get_regulatory_regions.py"

###### run FIMO on 1.5kb +/- around SPCGs TSS ######
# generate bed files for the SPCGs' regulatory regions 
rule process_regulatory_regions_SPCGs:
    input: 
        "../output/tss_table/regulatory_regions.bed", 
        "../input/SPCG_files/SPCG List.xlsx"
    output: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_pos.bed"
    shell: 
        """
        python3 process_regulatory_regions_SPCGs.py
        """

# get the fasta of SPCGs' regulatory regions 
rule get_regulatory_regions_SPCGs_fasta: 
    input: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_pos.bed", 
        "../input/reference_genome/dmel-all-chromosome-r6.33.fasta"
    output: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_seq.fasta"
    shell: 
        """
        bedtools getfasta -fi {input[1]} -bed {input[0]} -nameOnly > {output}
        """

# perform FIMO on SPCGs' regulatory regions 
rule FIMO_regulatory_regions_flyFactorSurvey_SPCGs: 
    input: 
        "../output/SPCG_regulatory_regions/spcg_regulatory_regions_seq.fasta"
    output: 
        
    shell: 
        """
        bash FIMO_regulatory_regions_flyFactorSurvey_SPCGs.sh
        """

rule summarize_SPCGs_FIMO_regions_results: 
    input: 
        "../input/SPCG_files/SPCG List.xlsx", 
        ""
    output: 
    shell: 
        """
        python3 analyze_FIMO_SPCGs.py
        """


##### trim peak regions to be 500 +/- around the peak and get the intersecting peaks ######
# trim the peak regions to be 500 +/- around the peak 
rule trim_range_peaks: 
    input: 
        "../input/GEO_processed/GSM4213092_oregon_CrebA_peaks.narrowPeak",
        "../input/intersect_peaks/Set1.NEW_OR_fkh_sage_intersection_fromDA.bed", 
        "../input/GEO_processed/GSM4213094_fkh_CrebA_peaks.narrowPeak",
        "../input/GEO_processed/GSM4213096_sage_CrebA_peaks.narrowPeak"
    output: 
        "../output/range_peak_regions/oregon_fkh_sage_intersect.narrowPeak",
        "../output/range_peak_regions/CrebA_oregon.narrowPeak", 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak",
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    shell: 
        """
        mkdir -p ../output/range_peak_regions/
        python trim_peaks_range.py
        """

# get the all unique peaks between fkh and sage ChIP-seq 
# get peaks that are more than 250 bps apart 
rule find_fkh_sage_peaks: 
    input: 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak", 
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    output: 
        "../output/range_peak_regions/sage_contrast_fkh.narrowPeak",
        "../output/range_peak_regions/fkh_sage_unique.narrowPeak"
    shell: 
        """
        bedtools intersect -a {input[1]} -b {input[0]} -f 0.5 -v > {output[0]}
        cat {input[0]} {output[0]} > {output[1]}
        """

# get the intersecting peaks between fkh and sage ChIP-seq data 
# get peaks that are less than 250 bps apart 
rule find_fkh_sage_intersect_peaks: 
    input: 
        "../output/range_peak_regions/CrebA_fkh.narrowPeak", 
        "../output/range_peak_regions/CrebA_sage.narrowPeak"
    output: 
        "../output/range_peak_regions/fkh_sage_intersect.narrowPeak"
    shell: 
        """
        bedtools intersect -a {input[1]} -b {input[0]} -f 0.25 -u -wa > {output}  
        """

##### match the peaks to a gene ######
# match the peak to a gene 
rule match_peak_gene: 
    input: 
        "../output/range_peak_regions/fkh_sage_intersect.narrowPeak", 
        "../output/range_peak_regions/fkh_sage_unique.narrowPeak"
    output: 
    shell: 
        """
        python3 match_nearest_region_to_genes_range.py
        """

rule find_bound_SPCGs: 
    input: 
        '../input/SPCG_files/SPCG List.xlsx', 
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv", 
        "../output/match_nearest_gene/fkh_sage_unique_genes.csv"
    output: 
        "../output/find_bound_SPCGs/spcg_match.csv"
    shell: 
        """
        python3 find_bound_SPCGs.py
        """

rule find_bound_DE_genes: 
    input: 
        "../output/match_nearest_gene/fkh_sage_unique_genes.csv",
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv"
    output: 
    shell: 
        """
        python3 find_bound_DE_genes.py
        """

rule plot_intersect_bound_genes: 
    input: 
        "../output/find_bound_DE_genes/down_DE.csv",
        "../output/find_bound_DE_genes/up_DE.csv",
        "../output/find_bound_SPCGs/spcg_match.csv",
        "../output/match_nearest_gene/fkh_sage_intersect_genes.csv"
    output: 
        "../output/bound_spcg_DE_venn/bound_SPCGs_down_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_scdown_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_up_venn.png", 
        "../output/bound_spcg_DE_venn/bound_SPCGs_scup_venn.png", 
        "../output/bound_spcg_DE_venn/bound_down_up_venn.png",
    shell: 
        """
        python3 plot_intersect_Bound_genes.py
        """
